name: Tests

on:
  push:
    branches:
      - main
    tags:
      - v*
  pull_request:


jobs:
  tests:
    name: pytests (${{ matrix.os }}, Miniforge3)
    runs-on: ${{ matrix.os }}-latest
    defaults:
      run:
        shell: bash -l {0}
    strategy:
      matrix:
        os: ["ubuntu", "windows"]
        python-version: [ '3.10', '3.11', '3.12' ]
    steps:
      - uses: actions/checkout@v4
      - uses: conda-incubator/setup-miniconda@v3
        with:
          environment-file: environment.yml
          miniforge-version: latest
          miniforge-variant: Miniforge3
      - name: Run tests
        run: |
          conda activate test
          pytest -vs --log-cli-level=debug


      - name: Build wheels
        run: |
          conda activate test
          python setup.py sdist
          python setup.py bdist_wheel

      - name: Upload wheels
        if: matrix.python-version == '3.10' && matrix.os == 'ubuntu'
        uses: actions/upload-artifact@v4
        with:
          name: wheels
          path: dist

  release:
    name: Release
    runs-on: ubuntu-latest
    if: "startsWith(github.ref, 'refs/tags/')"
    needs: [ tests ]
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: wheels
      - uses: conda-incubator/setup-miniconda@v3
        with:
          python-version: '3.10'
          miniforge-version: latest
          miniforge-variant: Miniforge3
      - name: Publish to PyPi
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          pip install typing-extensions
          pip install --upgrade twine
          twine upload --skip-existing *
